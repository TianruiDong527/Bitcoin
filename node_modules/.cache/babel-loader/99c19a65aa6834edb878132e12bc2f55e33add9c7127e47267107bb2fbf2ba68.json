{"ast":null,"code":"var _jsxFileName = \"/Users/dongtianrui/Desktop/NEU/INFO7500/my-bitcoin-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [blockHeight, setBlockHeight] = useState(null); // On-chain: Bitcoin block height\n  const [unconfirmedTxCount, setUnconfirmedTxCount] = useState(null); // On-chain: Unconfirmed transactions\n  const [btcPrice, setBtcPrice] = useState(null); // Off-chain: Bitcoin price in USD\n  const [error, setError] = useState('');\n\n  // Fetch Bitcoin block height (on-chain data from Blockchain.info)\n  const fetchBlockHeight = async () => {\n    try {\n      const response = await fetch('https://blockchain.info/q/getblockcount');\n      if (!response.ok) throw new Error('Failed to fetch block height');\n      const data = await response.text(); // Blockchain.info returns raw text\n      setBlockHeight(data); // Set block height from Blockchain.info\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch unconfirmed transactions count (on-chain data from Blockchain.info)\n  const fetchUnconfirmedTxCount = async () => {\n    try {\n      const response = await fetch('https://blockchain.info/q/unconfirmedcount');\n      if (!response.ok) throw new Error('Failed to fetch unconfirmed transactions count');\n      const data = await response.text(); // Blockchain.info returns raw text\n      setUnconfirmedTxCount(data); // Set unconfirmed transactions count from Blockchain.info\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch Bitcoin price (from CoinGecko)\n  const fetchBtcMetrics = async () => {\n    try {\n      const response = await fetch('https://api.coingecko.com/api/v3/coins/bitcoin?localization=false');\n      if (!response.ok) throw new Error('Failed to fetch Bitcoin metrics');\n      const data = await response.json();\n      setBtcPrice(data.market_data.current_price.usd); // Set Bitcoin price in USD\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Use `useEffect` to fetch data on component mount\n  useEffect(() => {\n    fetchBlockHeight();\n    fetchUnconfirmedTxCount();\n    fetchBtcMetrics();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), blockHeight !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Bitcoin Block Height: \", blockHeight]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading block height...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), unconfirmedTxCount !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Unconfirmed Transactions: \", unconfirmedTxCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading unconfirmed transactions count...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), btcPrice !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bitcoin Price (USD): $\", btcPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Bitcoin price...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TCyBabDQeVdSgEmFLXvD8gHMVeo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","blockHeight","setBlockHeight","unconfirmedTxCount","setUnconfirmedTxCount","btcPrice","setBtcPrice","error","setError","fetchBlockHeight","response","fetch","ok","Error","data","text","err","message","fetchUnconfirmedTxCount","fetchBtcMetrics","json","market_data","current_price","usd","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["/Users/dongtianrui/Desktop/NEU/INFO7500/my-bitcoin-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [blockHeight, setBlockHeight] = useState(null);  // On-chain: Bitcoin block height\n  const [unconfirmedTxCount, setUnconfirmedTxCount] = useState(null);  // On-chain: Unconfirmed transactions\n  const [btcPrice, setBtcPrice] = useState(null);        // Off-chain: Bitcoin price in USD\n  const [error, setError] = useState('');\n\n  // Fetch Bitcoin block height (on-chain data from Blockchain.info)\n  const fetchBlockHeight = async () => {\n    try {\n      const response = await fetch('https://blockchain.info/q/getblockcount');\n      if (!response.ok) throw new Error('Failed to fetch block height');\n      const data = await response.text();  // Blockchain.info returns raw text\n      setBlockHeight(data);  // Set block height from Blockchain.info\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch unconfirmed transactions count (on-chain data from Blockchain.info)\n  const fetchUnconfirmedTxCount = async () => {\n    try {\n      const response = await fetch('https://blockchain.info/q/unconfirmedcount');\n      if (!response.ok) throw new Error('Failed to fetch unconfirmed transactions count');\n      const data = await response.text();  // Blockchain.info returns raw text\n      setUnconfirmedTxCount(data);  // Set unconfirmed transactions count from Blockchain.info\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch Bitcoin price (from CoinGecko)\n  const fetchBtcMetrics = async () => {\n    try {\n      const response = await fetch('https://api.coingecko.com/api/v3/coins/bitcoin?localization=false');\n      if (!response.ok) throw new Error('Failed to fetch Bitcoin metrics');\n      const data = await response.json();\n\n      setBtcPrice(data.market_data.current_price.usd);  // Set Bitcoin price in USD\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Use `useEffect` to fetch data on component mount\n  useEffect(() => {\n    fetchBlockHeight();\n    fetchUnconfirmedTxCount();\n    fetchBtcMetrics();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Bitcoin Dashboard</h1>\n\n      {/* Display block height (on-chain) */}\n      {blockHeight !== null ? (\n        <p>Current Bitcoin Block Height: {blockHeight}</p>\n      ) : (\n        <p>Loading block height...</p>\n      )}\n\n      {/* Display unconfirmed transactions count (on-chain) */}\n      {unconfirmedTxCount !== null ? (\n        <p>Unconfirmed Transactions: {unconfirmedTxCount}</p>\n      ) : (\n        <p>Loading unconfirmed transactions count...</p>\n      )}\n\n      {/* Display Bitcoin price */}\n      {btcPrice !== null ? (\n        <div>\n          <p>Bitcoin Price (USD): ${btcPrice}</p>\n        </div>\n      ) : (\n        <p>Loading Bitcoin price...</p>\n      )}\n\n      {/* Display any errors */}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}