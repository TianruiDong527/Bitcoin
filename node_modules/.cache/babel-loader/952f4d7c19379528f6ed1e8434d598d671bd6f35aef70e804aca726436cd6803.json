{"ast":null,"code":"var _jsxFileName = \"/Users/dongtianrui/Desktop/NEU/INFO7500/my-bitcoin-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _btcMetrics$marketCap, _btcMetrics$volume24h;\n  // State variables to hold data\n  const [blockHeight, setBlockHeight] = useState(null); // On-chain: Bitcoin block height\n  const [blockInfo, setBlockInfo] = useState(null); // Detailed block information\n  const [btcPrice, setBtcPrice] = useState(null); // Off-chain: Bitcoin price in USD\n  const [btcMetrics, setBtcMetrics] = useState(null); // Other off-chain metrics\n  const [error, setError] = useState('');\n\n  // Fetch Bitcoin block height (on-chain data from Blockchair API)\n  const fetchBlockHeight = async () => {\n    try {\n      const response = await fetch('https://api.blockchair.com/bitcoin/stats');\n      if (!response.ok) throw new Error('Failed to fetch block height');\n      const data = await response.json();\n      setBlockHeight(data.data.blocks); // Set block height from Blockchair API\n      fetchBlockInfo(data.data.blocks); // Fetch detailed block info\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch detailed block information\n  const fetchBlockInfo = async blockHeight => {\n    try {\n      const response = await fetch(`https://api.blockchair.com/bitcoin/raw/block/${blockHeight}`);\n      if (!response.ok) throw new Error('Failed to fetch block info');\n      const data = await response.json();\n\n      // 打印 API 返回的完整数据，确保可以看到结构\n      console.log('Full API Response:', data);\n\n      // 检查返回的 data 中是否包含所需的区块信息\n      if (data.data && data.context) {\n        // 这里使用的是更通用的路径检查\n        console.log('Block Info:', data.data);\n\n        // 根据你看到的结构进行数据访问\n        const blockData = data.data; // 假设 data.data 已经包含了我们需要的区块信息\n        if (blockData) {\n          setBlockInfo({\n            hash: blockData.hash,\n            // Block hash\n            time: blockData.time,\n            // Timestamp\n            size: blockData.size,\n            // Block size\n            transactions: blockData.tx.length,\n            // Number of transactions\n            difficulty: blockData.difficulty,\n            // Mining difficulty\n            totalVolume: blockData.weight // Total transaction volume\n          });\n        } else {\n          throw new Error('Block data not found in the API response');\n        }\n      } else {\n        throw new Error('Invalid data structure in API response');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch Bitcoin price and other off-chain data (from CoinGecko)\n  const fetchBtcMetrics = async () => {\n    try {\n      const response = await fetch('https://api.coingecko.com/api/v3/coins/bitcoin?localization=false');\n      if (!response.ok) throw new Error('Failed to fetch Bitcoin metrics');\n      const data = await response.json();\n      setBtcPrice(data.market_data.current_price.usd); // Set Bitcoin price in USD\n      setBtcMetrics({\n        marketCap: data.market_data.market_cap.usd,\n        // Market capitalization\n        volume24h: data.market_data.total_volume.usd,\n        // 24h volume\n        priceChange24h: data.market_data.price_change_percentage_24h,\n        // 24h price change\n        priceChange7d: data.market_data.price_change_percentage_7d // 7d price change\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Use `useEffect` to fetch data on component mount\n  useEffect(() => {\n    fetchBlockHeight();\n    fetchBtcMetrics();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), blockHeight !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Bitcoin Block Height: \", blockHeight]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading block height...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), blockInfo !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Block Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Block Hash: \", blockInfo.hash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Timestamp: \", new Date(blockInfo.time * 1000).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Block Size: \", blockInfo.size, \" bytes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number of Transactions: \", blockInfo.transactions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mining Difficulty: \", blockInfo.difficulty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Transaction Volume (Weight): \", blockInfo.totalVolume]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading block information...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), btcPrice !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bitcoin Price (USD): $\", btcPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Market Cap: $\", (_btcMetrics$marketCap = btcMetrics.marketCap) === null || _btcMetrics$marketCap === void 0 ? void 0 : _btcMetrics$marketCap.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"24h Volume: $\", (_btcMetrics$volume24h = btcMetrics.volume24h) === null || _btcMetrics$volume24h === void 0 ? void 0 : _btcMetrics$volume24h.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"24h Price Change: \", btcMetrics.priceChange24h, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"7d Price Change: \", btcMetrics.priceChange7d, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Bitcoin metrics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iHgS1+TvsvZLVM87/Z6MYz1z/2I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","_btcMetrics$marketCap","_btcMetrics$volume24h","blockHeight","setBlockHeight","blockInfo","setBlockInfo","btcPrice","setBtcPrice","btcMetrics","setBtcMetrics","error","setError","fetchBlockHeight","response","fetch","ok","Error","data","json","blocks","fetchBlockInfo","err","message","console","log","context","blockData","hash","time","size","transactions","tx","length","difficulty","totalVolume","weight","fetchBtcMetrics","market_data","current_price","usd","marketCap","market_cap","volume24h","total_volume","priceChange24h","price_change_percentage_24h","priceChange7d","price_change_percentage_7d","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleString","style","color","_c","$RefreshReg$"],"sources":["/Users/dongtianrui/Desktop/NEU/INFO7500/my-bitcoin-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  // State variables to hold data\n  const [blockHeight, setBlockHeight] = useState(null);  // On-chain: Bitcoin block height\n  const [blockInfo, setBlockInfo] = useState(null);      // Detailed block information\n  const [btcPrice, setBtcPrice] = useState(null);        // Off-chain: Bitcoin price in USD\n  const [btcMetrics, setBtcMetrics] = useState(null);    // Other off-chain metrics\n  const [error, setError] = useState('');\n\n  // Fetch Bitcoin block height (on-chain data from Blockchair API)\n  const fetchBlockHeight = async () => {\n    try {\n      const response = await fetch('https://api.blockchair.com/bitcoin/stats');\n      if (!response.ok) throw new Error('Failed to fetch block height');\n      const data = await response.json();\n      setBlockHeight(data.data.blocks);  // Set block height from Blockchair API\n      fetchBlockInfo(data.data.blocks);  // Fetch detailed block info\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch detailed block information\n  const fetchBlockInfo = async (blockHeight) => {\n    try {\n      const response = await fetch(`https://api.blockchair.com/bitcoin/raw/block/${blockHeight}`);\n      if (!response.ok) throw new Error('Failed to fetch block info');\n      const data = await response.json();\n      \n      // 打印 API 返回的完整数据，确保可以看到结构\n      console.log('Full API Response:', data);\n  \n      // 检查返回的 data 中是否包含所需的区块信息\n      if (data.data && data.context) {\n        // 这里使用的是更通用的路径检查\n        console.log('Block Info:', data.data);\n  \n        // 根据你看到的结构进行数据访问\n        const blockData = data.data;  // 假设 data.data 已经包含了我们需要的区块信息\n        if (blockData) {\n          setBlockInfo({\n            hash: blockData.hash,                      // Block hash\n            time: blockData.time,                      // Timestamp\n            size: blockData.size,                      // Block size\n            transactions: blockData.tx.length,         // Number of transactions\n            difficulty: blockData.difficulty,          // Mining difficulty\n            totalVolume: blockData.weight,             // Total transaction volume\n          });\n        } else {\n          throw new Error('Block data not found in the API response');\n        }\n      } else {\n        throw new Error('Invalid data structure in API response');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  \n  \n\n  // Fetch Bitcoin price and other off-chain data (from CoinGecko)\n  const fetchBtcMetrics = async () => {\n    try {\n      const response = await fetch('https://api.coingecko.com/api/v3/coins/bitcoin?localization=false');\n      if (!response.ok) throw new Error('Failed to fetch Bitcoin metrics');\n      const data = await response.json();\n\n      setBtcPrice(data.market_data.current_price.usd);  // Set Bitcoin price in USD\n      setBtcMetrics({\n        marketCap: data.market_data.market_cap.usd,      // Market capitalization\n        volume24h: data.market_data.total_volume.usd,    // 24h volume\n        priceChange24h: data.market_data.price_change_percentage_24h,  // 24h price change\n        priceChange7d: data.market_data.price_change_percentage_7d,    // 7d price change\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Use `useEffect` to fetch data on component mount\n  useEffect(() => {\n    fetchBlockHeight();\n    fetchBtcMetrics();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Bitcoin Dashboard</h1>\n\n      {/* Display block height (on-chain) */}\n      {blockHeight !== null ? (\n        <p>Current Bitcoin Block Height: {blockHeight}</p>\n      ) : (\n        <p>Loading block height...</p>\n      )}\n\n      {/* Display detailed block information */}\n      {blockInfo !== null ? (\n        <div>\n          <h2>Block Information</h2>\n          <p>Block Hash: {blockInfo.hash}</p>\n          <p>Timestamp: {new Date(blockInfo.time * 1000).toLocaleString()}</p>\n          <p>Block Size: {blockInfo.size} bytes</p>\n          <p>Number of Transactions: {blockInfo.transactions}</p>\n          <p>Mining Difficulty: {blockInfo.difficulty}</p>\n          <p>Total Transaction Volume (Weight): {blockInfo.totalVolume}</p>\n        </div>\n      ) : (\n        <p>Loading block information...</p>\n      )}\n\n      {/* Display Bitcoin price and other off-chain data */}\n      {btcPrice !== null ? (\n        <div>\n          <p>Bitcoin Price (USD): ${btcPrice}</p>\n          <p>Market Cap: ${btcMetrics.marketCap?.toLocaleString()}</p>\n          <p>24h Volume: ${btcMetrics.volume24h?.toLocaleString()}</p>\n          <p>24h Price Change: {btcMetrics.priceChange24h}%</p>\n          <p>7d Price Change: {btcMetrics.priceChange7d}%</p>\n        </div>\n      ) : (\n        <p>Loading Bitcoin metrics...</p>\n      )}\n\n      {/* Display any errors */}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}