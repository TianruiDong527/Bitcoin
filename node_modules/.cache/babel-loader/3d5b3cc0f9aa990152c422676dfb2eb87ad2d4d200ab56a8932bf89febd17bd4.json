{"ast":null,"code":"var _jsxFileName = \"/Users/dongtianrui/Desktop/NEU/INFO7500/my-bitcoin-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // BitcoinPrice 组件的逻辑\n  const [btcPrice, setBtcPrice] = useState(null); // 保存比特币价格\n  const [error, setError] = useState(null); // 保存错误信息\n\n  useEffect(() => {\n    // 使用 fetch 从 CoinGecko API 获取比特币价格\n    const fetchBtcPrice = async () => {\n      try {\n        const response = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd');\n        if (!response.ok) {\n          throw new Error('Failed to fetch Bitcoin price');\n        }\n        const data = await response.json();\n        setBtcPrice(data.bitcoin.usd); // 提取比特币价格并存储到状态中\n      } catch (error) {\n        setError(error.message); // 捕获并显示错误\n      }\n    };\n    fetchBtcPrice(); // 组件挂载时获取数据\n  }, []); // 空数组表示该 effect 只在组件首次挂载时执行\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bitcoin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Bitcoin Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), btcPrice !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Bitcoin Price: $\", btcPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this) // 显示比特币价格\n        : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error ? error : 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this) // 如果有错误，则显示错误信息\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WBfndQeXylBcOD8AoYga/QbBWtM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","btcPrice","setBtcPrice","error","setError","fetchBtcPrice","response","fetch","ok","Error","data","json","bitcoin","usd","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dongtianrui/Desktop/NEU/INFO7500/my-bitcoin-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  // BitcoinPrice 组件的逻辑\n  const [btcPrice, setBtcPrice] = useState(null);  // 保存比特币价格\n  const [error, setError] = useState(null);        // 保存错误信息\n\n  useEffect(() => {\n    // 使用 fetch 从 CoinGecko API 获取比特币价格\n    const fetchBtcPrice = async () => {\n      try {\n        const response = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd');\n        if (!response.ok) {\n          throw new Error('Failed to fetch Bitcoin price');\n        }\n        const data = await response.json();\n        setBtcPrice(data.bitcoin.usd);  // 提取比特币价格并存储到状态中\n      } catch (error) {\n        setError(error.message);  // 捕获并显示错误\n      }\n    };\n\n    fetchBtcPrice();  // 组件挂载时获取数据\n  }, []);  // 空数组表示该 effect 只在组件首次挂载时执行\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Bitcoin Dashboard</h1>\n        {/* BitcoinPrice 组件的 UI */}\n        <div>\n          <h2>Bitcoin Price</h2>\n          {btcPrice !== null ? (\n            <p>Current Bitcoin Price: ${btcPrice}</p>  // 显示比特币价格\n          ) : (\n            <p>{error ? error : 'Loading...'}</p>  // 如果有错误，则显示错误信息\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACjD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAQ;;EAEjDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6EAA6E,CAAC;QAC3G,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCT,WAAW,CAACQ,IAAI,CAACE,OAAO,CAACC,GAAG,CAAC,CAAC,CAAE;MAClC,CAAC,CAAC,OAAOV,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACW,OAAO,CAAC,CAAC,CAAE;MAC5B;IACF,CAAC;IAEDT,aAAa,CAAC,CAAC,CAAC,CAAE;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,oBACEP,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlB,OAAA;MAAQiB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BlB,OAAA;QAAAkB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE1BtB,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UAAAkB,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACrBnB,QAAQ,KAAK,IAAI,gBAChBH,OAAA;UAAAkB,QAAA,GAAG,0BAAwB,EAACf,QAAQ;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,CAAE;QAAA,eAE3CtB,OAAA;UAAAkB,QAAA,EAAIb,KAAK,GAAGA,KAAK,GAAG;QAAY;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,CAAE;QACxC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACpB,EAAA,CAvCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}