{"ast":null,"code":"var _jsxFileName = \"/Users/dongtianrui/Desktop/NEU/INFO7500/my-bitcoin-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [blockHeight, setBlockHeight] = useState(null); // On-chain: Bitcoin block height\n  const [btcPrice, setBtcPrice] = useState(null); // Off-chain: Bitcoin price in USD\n  const [onChainMetrics, setOnChainMetrics] = useState(null); // On-chain metrics\n  const [error, setError] = useState('');\n\n  // Fetch Bitcoin block height (on-chain data from Blockchair API)\n  const fetchBlockHeight = async () => {\n    try {\n      const response = await fetch('https://api.blockchair.com/bitcoin/stats');\n      if (!response.ok) throw new Error('Failed to fetch block height');\n      const data = await response.json();\n      setBlockHeight(data.data.blocks); // Set block height from Blockchair API\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch Bitcoin price and other off-chain data (from CoinGecko)\n  const fetchBtcMetrics = async () => {\n    try {\n      const response = await fetch('https://api.coingecko.com/api/v3/coins/bitcoin?localization=false');\n      if (!response.ok) throw new Error('Failed to fetch Bitcoin metrics');\n      const data = await response.json();\n      setBtcPrice(data.market_data.current_price.usd); // Set Bitcoin price in USD\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch on-chain metrics (from Blockchair API)\n  const fetchOnChainMetrics = async () => {\n    try {\n      const response = await fetch('https://api.blockchair.com/bitcoin/dashboards/block/latest');\n      if (!response.ok) throw new Error('Failed to fetch on-chain metrics');\n      const data = await response.json();\n      setOnChainMetrics({\n        transactionVolume: data.data[Object.keys(data.data)[0]].block.transaction_volume,\n        // Transaction volume\n        transactions: data.data[Object.keys(data.data)[0]].block.transaction_count // Number of transactions\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Use `useEffect` to fetch data on component mount\n  useEffect(() => {\n    fetchBlockHeight();\n    fetchBtcMetrics();\n    fetchOnChainMetrics();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), blockHeight !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Bitcoin Block Height: \", blockHeight]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading block height...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), btcPrice !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bitcoin Price (USD): $\", btcPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Bitcoin price...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), onChainMetrics !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"On-Chain Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"On-Chain Transaction Volume: \", onChainMetrics.transactionVolume.toLocaleString(), \" BTC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number of Transactions: \", onChainMetrics.transactions.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading on-chain metrics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XDB2uPs0OIOiiquPWpMPtNgDLI8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","blockHeight","setBlockHeight","btcPrice","setBtcPrice","onChainMetrics","setOnChainMetrics","error","setError","fetchBlockHeight","response","fetch","ok","Error","data","json","blocks","err","message","fetchBtcMetrics","market_data","current_price","usd","fetchOnChainMetrics","transactionVolume","Object","keys","block","transaction_volume","transactions","transaction_count","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","style","color","_c","$RefreshReg$"],"sources":["/Users/dongtianrui/Desktop/NEU/INFO7500/my-bitcoin-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [blockHeight, setBlockHeight] = useState(null);  // On-chain: Bitcoin block height\n  const [btcPrice, setBtcPrice] = useState(null);        // Off-chain: Bitcoin price in USD\n  const [onChainMetrics, setOnChainMetrics] = useState(null); // On-chain metrics\n  const [error, setError] = useState('');\n\n  // Fetch Bitcoin block height (on-chain data from Blockchair API)\n  const fetchBlockHeight = async () => {\n    try {\n      const response = await fetch('https://api.blockchair.com/bitcoin/stats');\n      if (!response.ok) throw new Error('Failed to fetch block height');\n      const data = await response.json();\n      setBlockHeight(data.data.blocks);  // Set block height from Blockchair API\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch Bitcoin price and other off-chain data (from CoinGecko)\n  const fetchBtcMetrics = async () => {\n    try {\n      const response = await fetch('https://api.coingecko.com/api/v3/coins/bitcoin?localization=false');\n      if (!response.ok) throw new Error('Failed to fetch Bitcoin metrics');\n      const data = await response.json();\n\n      setBtcPrice(data.market_data.current_price.usd);  // Set Bitcoin price in USD\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch on-chain metrics (from Blockchair API)\n  const fetchOnChainMetrics = async () => {\n    try {\n      const response = await fetch('https://api.blockchair.com/bitcoin/dashboards/block/latest');\n      if (!response.ok) throw new Error('Failed to fetch on-chain metrics');\n      const data = await response.json();\n\n      setOnChainMetrics({\n        transactionVolume: data.data[Object.keys(data.data)[0]].block.transaction_volume,  // Transaction volume\n        transactions: data.data[Object.keys(data.data)[0]].block.transaction_count,  // Number of transactions\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Use `useEffect` to fetch data on component mount\n  useEffect(() => {\n    fetchBlockHeight();\n    fetchBtcMetrics();\n    fetchOnChainMetrics();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Bitcoin Dashboard</h1>\n\n      {/* Display block height (on-chain) */}\n      {blockHeight !== null ? (\n        <p>Current Bitcoin Block Height: {blockHeight}</p>\n      ) : (\n        <p>Loading block height...</p>\n      )}\n\n      {/* Display Bitcoin price */}\n      {btcPrice !== null ? (\n        <div>\n          <p>Bitcoin Price (USD): ${btcPrice}</p>\n        </div>\n      ) : (\n        <p>Loading Bitcoin price...</p>\n      )}\n\n      {/* Display on-chain metrics */}\n      {onChainMetrics !== null ? (\n        <div>\n          <h2>On-Chain Metrics</h2>\n          <p>On-Chain Transaction Volume: {onChainMetrics.transactionVolume.toLocaleString()} BTC</p>\n          <p>Number of Transactions: {onChainMetrics.transactions.toLocaleString()}</p>\n        </div>\n      ) : (\n        <p>Loading on-chain metrics...</p>\n      )}\n\n      {/* Display any errors */}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}