{"ast":null,"code":"var _jsxFileName = \"/Users/dongtianrui/Desktop/NEU/INFO7500/my-bitcoin-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _btcMetrics$marketCap, _btcMetrics$volume24h;\n  // State variables to hold data\n  const [blockHeight, setBlockHeight] = useState(null); // On-chain: Bitcoin block height\n  const [btcPrice, setBtcPrice] = useState(null); // Off-chain: Bitcoin price in USD\n  const [btcMetrics, setBtcMetrics] = useState(null); // Other off-chain metrics\n  const [error, setError] = useState('');\n\n  // Fetch Bitcoin block height (on-chain data from Blockchair API)\n  const fetchBlockHeight = async () => {\n    try {\n      const response = await fetch('https://api.blockchair.com/bitcoin/stats');\n      if (!response.ok) throw new Error('Failed to fetch block height');\n      const data = await response.json();\n      setBlockHeight(data.data.blocks); // Set block height from Blockchair API\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch Bitcoin price and other off-chain data (from CoinGecko)\n  const fetchBtcMetrics = async () => {\n    try {\n      const response = await fetch('https://api.coingecko.com/api/v3/coins/bitcoin?localization=false');\n      if (!response.ok) throw new Error('Failed to fetch Bitcoin metrics');\n      const data = await response.json();\n      setBtcPrice(data.market_data.current_price.usd); // Set Bitcoin price in USD\n      setBtcMetrics({\n        marketCap: data.market_data.market_cap.usd,\n        // Market capitalization\n        volume24h: data.market_data.total_volume.usd,\n        // 24h volume\n        priceChange24h: data.market_data.price_change_percentage_24h,\n        // 24h price change\n        priceChange7d: data.market_data.price_change_percentage_7d // 7d price change\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Use `useEffect` to fetch data on component mount\n  useEffect(() => {\n    fetchBlockHeight();\n    fetchBtcMetrics();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), blockHeight !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Bitcoin Block Height: \", blockHeight]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading block height...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), btcPrice !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bitcoin Price (USD): $\", btcPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Market Cap: $\", (_btcMetrics$marketCap = btcMetrics.marketCap) === null || _btcMetrics$marketCap === void 0 ? void 0 : _btcMetrics$marketCap.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"24h Volume: $\", (_btcMetrics$volume24h = btcMetrics.volume24h) === null || _btcMetrics$volume24h === void 0 ? void 0 : _btcMetrics$volume24h.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"24h Price Change: \", btcMetrics.priceChange24h, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"7d Price Change: \", btcMetrics.priceChange7d, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Bitcoin metrics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/gCD80+k1/U4aF+uENsLjlDgoBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","_btcMetrics$marketCap","_btcMetrics$volume24h","blockHeight","setBlockHeight","btcPrice","setBtcPrice","btcMetrics","setBtcMetrics","error","setError","fetchBlockHeight","response","fetch","ok","Error","data","json","blocks","err","message","fetchBtcMetrics","market_data","current_price","usd","marketCap","market_cap","volume24h","total_volume","priceChange24h","price_change_percentage_24h","priceChange7d","price_change_percentage_7d","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","style","color","_c","$RefreshReg$"],"sources":["/Users/dongtianrui/Desktop/NEU/INFO7500/my-bitcoin-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  // State variables to hold data\n  const [blockHeight, setBlockHeight] = useState(null);  // On-chain: Bitcoin block height\n  const [btcPrice, setBtcPrice] = useState(null);        // Off-chain: Bitcoin price in USD\n  const [btcMetrics, setBtcMetrics] = useState(null);    // Other off-chain metrics\n  const [error, setError] = useState('');\n\n  // Fetch Bitcoin block height (on-chain data from Blockchair API)\n  const fetchBlockHeight = async () => {\n    try {\n      const response = await fetch('https://api.blockchair.com/bitcoin/stats');\n      if (!response.ok) throw new Error('Failed to fetch block height');\n      const data = await response.json();\n      setBlockHeight(data.data.blocks);  // Set block height from Blockchair API\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch Bitcoin price and other off-chain data (from CoinGecko)\n  const fetchBtcMetrics = async () => {\n    try {\n      const response = await fetch('https://api.coingecko.com/api/v3/coins/bitcoin?localization=false');\n      if (!response.ok) throw new Error('Failed to fetch Bitcoin metrics');\n      const data = await response.json();\n\n      setBtcPrice(data.market_data.current_price.usd);  // Set Bitcoin price in USD\n      setBtcMetrics({\n        marketCap: data.market_data.market_cap.usd,      // Market capitalization\n        volume24h: data.market_data.total_volume.usd,    // 24h volume\n        priceChange24h: data.market_data.price_change_percentage_24h,  // 24h price change\n        priceChange7d: data.market_data.price_change_percentage_7d,    // 7d price change\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Use `useEffect` to fetch data on component mount\n  useEffect(() => {\n    fetchBlockHeight();\n    fetchBtcMetrics();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Bitcoin Dashboard</h1>\n\n      {/* Display block height (on-chain) */}\n      {blockHeight !== null ? (\n        <p>Current Bitcoin Block Height: {blockHeight}</p>\n      ) : (\n        <p>Loading block height...</p>\n      )}\n\n      {/* Display Bitcoin price and other off-chain data */}\n      {btcPrice !== null ? (\n        <div>\n          <p>Bitcoin Price (USD): ${btcPrice}</p>\n          <p>Market Cap: ${btcMetrics.marketCap?.toLocaleString()}</p>\n          <p>24h Volume: ${btcMetrics.volume24h?.toLocaleString()}</p>\n          <p>24h Price Change: {btcMetrics.priceChange24h}%</p>\n          <p>7d Price Change: {btcMetrics.priceChange7d}%</p>\n        </div>\n      ) : (\n        <p>Loading Bitcoin metrics...</p>\n      )}\n\n      {/* Display any errors */}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}